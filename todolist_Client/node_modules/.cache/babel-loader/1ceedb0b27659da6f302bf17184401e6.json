{"ast":null,"code":"'use strict';\n\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\n\nconst AuthProvider = require('./auth_provider').AuthProvider; // TODO: can we get the Binary type from this.bson instead?\n\n\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\n/**\n * Creates a new Plain authentication mechanism\n *\n * @extends AuthProvider\n */\n\nclass Plain extends AuthProvider {\n  /**\n   * Implementation of authentication for a single connection\n   * @override\n   */\n  _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {\n    const username = credentials.username;\n    const password = credentials.password;\n    const payload = new Binary(`\\x00${username}\\x00${password}`);\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n    sendAuthCommand(connection, '$external.$cmd', command, callback);\n  }\n\n}\n\nmodule.exports = Plain;","map":{"version":3,"sources":["/home/hoangnd/source/ReactJS/todolist/node_modules/mongodb/lib/core/auth/plain.js"],"names":["retrieveBSON","require","AuthProvider","BSON","Binary","Plain","_authenticateSingleConnection","sendAuthCommand","connection","credentials","callback","username","password","payload","command","saslStart","mechanism","autoAuthorize","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,YAApD;;AACA,MAAME,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,YAAhD,C,CAEA;;;AACA,MAAMC,IAAI,GAAGH,YAAY,EAAzB;AACA,MAAMI,MAAM,GAAGD,IAAI,CAACC,MAApB;AAEA;;;;;;AAKA,MAAMC,KAAN,SAAoBH,YAApB,CAAiC;AAC/B;;;;AAIAI,EAAAA,6BAA6B,CAACC,eAAD,EAAkBC,UAAlB,EAA8BC,WAA9B,EAA2CC,QAA3C,EAAqD;AAChF,UAAMC,QAAQ,GAAGF,WAAW,CAACE,QAA7B;AACA,UAAMC,QAAQ,GAAGH,WAAW,CAACG,QAA7B;AACA,UAAMC,OAAO,GAAG,IAAIT,MAAJ,CAAY,OAAMO,QAAS,OAAMC,QAAS,EAA1C,CAAhB;AACA,UAAME,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAE,CADG;AAEdC,MAAAA,SAAS,EAAE,OAFG;AAGdH,MAAAA,OAAO,EAAEA,OAHK;AAIdI,MAAAA,aAAa,EAAE;AAJD,KAAhB;AAOAV,IAAAA,eAAe,CAACC,UAAD,EAAa,gBAAb,EAA+BM,OAA/B,EAAwCJ,QAAxC,CAAf;AACD;;AAjB8B;;AAoBjCQ,MAAM,CAACC,OAAP,GAAiBd,KAAjB","sourcesContent":["'use strict';\n\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\n// TODO: can we get the Binary type from this.bson instead?\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\n\n/**\n * Creates a new Plain authentication mechanism\n *\n * @extends AuthProvider\n */\nclass Plain extends AuthProvider {\n  /**\n   * Implementation of authentication for a single connection\n   * @override\n   */\n  _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {\n    const username = credentials.username;\n    const password = credentials.password;\n    const payload = new Binary(`\\x00${username}\\x00${password}`);\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    sendAuthCommand(connection, '$external.$cmd', command, callback);\n  }\n}\n\nmodule.exports = Plain;\n"]},"metadata":{},"sourceType":"script"}