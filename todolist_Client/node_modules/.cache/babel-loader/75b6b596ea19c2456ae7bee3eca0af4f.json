{"ast":null,"code":"var _jsxFileName = \"/home/hoangnd/source/ReactJS/todolist/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport ListRow from \"./ListWork/ListRow\";\nimport MongoClient from 'mongodb'; // connection string mongodb\n\nconst uri = \"mongodb://localhost\"; // Get all employees\n\nasync function GetData() {\n  try {\n    let client = await MongoClient.connect(uri, {\n      useUnifiedTopology: true\n    });\n    let collections = await client.db('ToDoListDB').collection('Works');\n    let items = await collections.find({}).toArray();\n    client.close();\n    return items;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.countWork = 0;\n\n    this.DeleteWork = id => {\n      var new_list = this.state.list;\n\n      for (var i = 0; i < new_list.length; i++) {\n        if (new_list[i].id === id) {\n          new_list.splice(i, 1);\n          break;\n        }\n      }\n\n      this.setState({\n        list: new_list\n      });\n    };\n\n    this.DescriptionChangeEvent = event => {\n      this.setState({\n        description: event.target.value.toString()\n      });\n    };\n\n    this.AddWorkEvent = event => {\n      event.preventDefault();\n\n      if (this.state.description !== \"\") {\n        var row = {\n          id: this.countWork,\n          data: this.state.description\n        };\n        this.setState({\n          description: \"\",\n          list: [...this.state.list, row]\n        });\n        this.countWork += 1;\n        document.getElementById(\"add-work-form\").reset();\n      } else {\n        alert(\"none description input\");\n      }\n    };\n\n    this.state = {\n      description: \"\",\n      list: []\n    };\n  }\n\n  async LoadData() {\n    var items = await GetData();\n    console.log(items);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-work-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"add-work-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"What needs to be done?\",\n      className: \"form-control\",\n      onChange: this.DescriptionChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.AddWorkEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Add\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-work-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"TODO LIST\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-work\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, this.state.list.map((value, index) => {\n      return /*#__PURE__*/React.createElement(ListRow, {\n        des: value.data,\n        id: value.id,\n        key: value.id,\n        deleteWork: this.DeleteWork,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      });\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hoangnd/source/ReactJS/todolist/src/App.js"],"names":["React","Component","ListRow","MongoClient","uri","GetData","client","connect","useUnifiedTopology","collections","db","collection","items","find","toArray","close","error","console","log","App","constructor","props","countWork","DeleteWork","id","new_list","state","list","i","length","splice","setState","DescriptionChangeEvent","event","description","target","value","toString","AddWorkEvent","preventDefault","row","data","document","getElementById","reset","alert","LoadData","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ListRow from \"./ListWork/ListRow\";\nimport MongoClient from 'mongodb';\n\n// connection string mongodb\nconst uri = \"mongodb://localhost\";\n\n// Get all employees\nasync function GetData() {\n  try {\n      let client = await MongoClient.connect(uri, { useUnifiedTopology: true });\n      let collections = await client.db('ToDoListDB').collection('Works');\n      let items = await collections.find({}).toArray();\n\n      client.close();\n      return items;\n  } catch (error) {\n      console.log(error);\n  }\n}\n\nclass App extends Component {\n  countWork = 0;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      list: [],\n    };\n  }\n\n  async LoadData(){\n    var items = await GetData();\n    console.log(items);\n  }\n\n  DeleteWork = (id) => {\n    var new_list = this.state.list;\n    for(var i = 0;i<new_list.length;i++){\n      if(new_list[i].id === id){\n        new_list.splice(i,1);\n        break;\n      }\n    }\n\n    this.setState({\n      list: new_list\n    })\n  }\n\n  DescriptionChangeEvent = (event) => {\n    this.setState({ description: event.target.value.toString() });\n  };\n\n  AddWorkEvent = (event) => {\n    event.preventDefault();\n    if (this.state.description !== \"\") {\n      var row = {\n        id: this.countWork,\n        data: this.state.description\n      }\n      this.setState({\n        description: \"\",\n        list: [...this.state.list, row],\n      });\n\n      this.countWork += 1;\n      document.getElementById(\"add-work-form\").reset();\n    } else {\n      alert(\"none description input\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"cont\">\n        {/* Form add new work */}\n        <div className=\"add-work-field\">\n          <div className=\"form-group\">\n            <form id=\"add-work-form\">\n              <input\n                placeholder=\"What needs to be done?\"\n                className=\"form-control\"\n                onChange={this.DescriptionChangeEvent}\n              >\n              </input>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.AddWorkEvent}\n              >\n                Add\n              </button>\n            </form>\n          </div>\n        </div>\n        <div className=\"list-work-field\">\n          <span>TODO LIST</span>\n          <hr></hr>\n          <div className=\"list-work\">{\n            this.state.list.map((value, index) => {\n              return (\n                <ListRow\n                  des={value.data}\n                  id={value.id}\n                  key={value.id}\n                  deleteWork={this.DeleteWork}\n                ></ListRow>\n              )\n            })\n          }</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}