{"ast":null,"code":"var _jsxFileName = \"/home/hoangnd/source/ReactJS/todolist/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport ListRow from \"./ListWork/ListRow\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.countWork = 0;\n\n    this.DeleteWork = index => {\n      alert(index); // var new_list = this.state.list;\n      // new_list.splice(index, 1);\n      // this.setState({\n      //   list: new_list\n      // })\n    };\n\n    this.DescriptionChangeEvent = event => {\n      this.setState({\n        description: event.target.value.toString()\n      });\n    };\n\n    this.AddWorkEvent = event => {\n      event.preventDefault();\n\n      if (this.state.description !== \"\") {\n        var row = {\n          id: this.countWork,\n          data: this.state.description\n        };\n        this.setState({\n          description: \"\",\n          list: [...this.state.list, row]\n        });\n        this.countWork += 1;\n        document.getElementById(\"add-work-form\").reset();\n      } else {\n        alert(\"none description input\");\n      }\n    };\n\n    this.state = {\n      description: \"\",\n      list: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-work-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"add-work-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"What needs to be done?\",\n      className: \"form-control\",\n      onChange: this.DescriptionChangeEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.AddWorkEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"Add\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-work-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"TODO LIST\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-work\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, this.state.list.map((value, index) => {\n      return /*#__PURE__*/React.createElement(ListRow, {\n        des: value.data,\n        id: value.id,\n        key: value.id,\n        deleteWork: this.DeleteWork,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      });\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hoangnd/source/ReactJS/todolist/src/App.js"],"names":["React","Component","ListRow","App","constructor","props","countWork","DeleteWork","index","alert","DescriptionChangeEvent","event","setState","description","target","value","toString","AddWorkEvent","preventDefault","state","row","id","data","list","document","getElementById","reset","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ListRow from \"./ListWork/ListRow\";\n\nclass App extends Component {\n  countWork = 0;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      list: [],\n    };\n  }\n\n  DeleteWork = (index) => {\n    alert(index);\n    // var new_list = this.state.list;\n    // new_list.splice(index, 1);\n    // this.setState({\n    //   list: new_list\n    // })\n  }\n\n  DescriptionChangeEvent = (event) => {\n    this.setState({ description: event.target.value.toString() });\n  };\n\n  AddWorkEvent = (event) => {\n    event.preventDefault();\n    if (this.state.description !== \"\") {\n      var row = {\n        id: this.countWork,\n        data: this.state.description\n      }\n      this.setState({\n        description: \"\",\n        list: [...this.state.list, row],\n      });\n\n      this.countWork += 1;\n      document.getElementById(\"add-work-form\").reset();\n    } else {\n      alert(\"none description input\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"cont\">\n        {/* Form add new work */}\n        <div className=\"add-work-field\">\n          <div className=\"form-group\">\n            <form id=\"add-work-form\">\n              <input\n                placeholder=\"What needs to be done?\"\n                className=\"form-control\"\n                onChange={this.DescriptionChangeEvent}\n              ></input>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.AddWorkEvent}\n              >\n                Add\n              </button>\n            </form>\n          </div>\n        </div>\n        <div className=\"list-work-field\">\n          <span>TODO LIST</span>\n          <hr></hr>\n          <div className=\"list-work\">{\n            this.state.list.map((value, index) => {\n              return (\n                <ListRow\n                  des={value.data}\n                  id={value.id}\n                  key={value.id}\n                  deleteWork={this.DeleteWork}\n                ></ListRow>\n              )\n            })\n          }</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}