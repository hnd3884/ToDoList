{"ast":null,"code":"'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst resolveReadPreference = require('../utils').resolveReadPreference;\n\nclass FindOperation extends OperationBase {\n  constructor(collection, ns, command, options) {\n    super(options);\n    this.ns = ns;\n    this.cmd = command;\n    this.readPreference = resolveReadPreference(collection, this.options);\n  }\n\n  execute(server, callback) {\n    // copied from `CommandOperationV2`, to be subclassed in the future\n    this.server = server;\n    const cursorState = this.cursorState || {}; // TOOD: use `MongoDBNamespace` through and through\n\n    server.query(this.ns.toString(), this.cmd, cursorState, this.options, callback);\n  }\n\n}\n\ndefineAspects(FindOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = FindOperation;","map":{"version":3,"sources":["/home/hoangnd/source/ReactJS/todolist/node_modules/mongodb/lib/operations/find.js"],"names":["OperationBase","require","Aspect","defineAspects","resolveReadPreference","FindOperation","constructor","collection","ns","command","options","cmd","readPreference","execute","server","callback","cursorState","query","toString","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,aAA7C;;AACA,MAAME,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,MAAtC;;AACA,MAAMC,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;;AACA,MAAMC,qBAAqB,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,qBAAlD;;AAEA,MAAMC,aAAN,SAA4BL,aAA5B,CAA0C;AACxCM,EAAAA,WAAW,CAACC,UAAD,EAAaC,EAAb,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;AAC5C,UAAMA,OAAN;AAEA,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKG,GAAL,GAAWF,OAAX;AACA,SAAKG,cAAL,GAAsBR,qBAAqB,CAACG,UAAD,EAAa,KAAKG,OAAlB,CAA3C;AACD;;AAEDG,EAAAA,OAAO,CAACC,MAAD,EAASC,QAAT,EAAmB;AACxB;AACA,SAAKD,MAAL,GAAcA,MAAd;AAEA,UAAME,WAAW,GAAG,KAAKA,WAAL,IAAoB,EAAxC,CAJwB,CAMxB;;AACAF,IAAAA,MAAM,CAACG,KAAP,CAAa,KAAKT,EAAL,CAAQU,QAAR,EAAb,EAAiC,KAAKP,GAAtC,EAA2CK,WAA3C,EAAwD,KAAKN,OAA7D,EAAsEK,QAAtE;AACD;;AAjBuC;;AAoB1CZ,aAAa,CAACE,aAAD,EAAgB,CAC3BH,MAAM,CAACiB,cADoB,EAE3BjB,MAAM,CAACkB,SAFoB,EAG3BlB,MAAM,CAACmB,sBAHoB,CAAhB,CAAb;AAMAC,MAAM,CAACC,OAAP,GAAiBlB,aAAjB","sourcesContent":["'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst resolveReadPreference = require('../utils').resolveReadPreference;\n\nclass FindOperation extends OperationBase {\n  constructor(collection, ns, command, options) {\n    super(options);\n\n    this.ns = ns;\n    this.cmd = command;\n    this.readPreference = resolveReadPreference(collection, this.options);\n  }\n\n  execute(server, callback) {\n    // copied from `CommandOperationV2`, to be subclassed in the future\n    this.server = server;\n\n    const cursorState = this.cursorState || {};\n\n    // TOOD: use `MongoDBNamespace` through and through\n    server.query(this.ns.toString(), this.cmd, cursorState, this.options, callback);\n  }\n}\n\ndefineAspects(FindOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = FindOperation;\n"]},"metadata":{},"sourceType":"script"}