{"ast":null,"code":"'use strict';\n\nconst FindAndModifyOperation = require('./find_and_modify');\n\nclass FindOneAndUpdateOperation extends FindAndModifyOperation {\n  constructor(collection, filter, update, options) {\n    // Final options\n    const finalOptions = Object.assign({}, options);\n    finalOptions.fields = options.projection;\n    finalOptions.update = true;\n    finalOptions.new = typeof options.returnOriginal === 'boolean' ? !options.returnOriginal : false;\n    finalOptions.upsert = typeof options.upsert === 'boolean' ? options.upsert : false;\n    super(collection, filter, finalOptions.sort, update, finalOptions);\n  }\n\n}\n\nmodule.exports = FindOneAndUpdateOperation;","map":{"version":3,"sources":["/home/hoangnd/source/ReactJS/todolist/node_modules/mongodb/lib/operations/find_one_and_update.js"],"names":["FindAndModifyOperation","require","FindOneAndUpdateOperation","constructor","collection","filter","update","options","finalOptions","Object","assign","fields","projection","new","returnOriginal","upsert","sort","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,mBAAD,CAAtC;;AAEA,MAAMC,yBAAN,SAAwCF,sBAAxC,CAA+D;AAC7DG,EAAAA,WAAW,CAACC,UAAD,EAAaC,MAAb,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsC;AAC/C;AACA,UAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,CAArB;AACAC,IAAAA,YAAY,CAACG,MAAb,GAAsBJ,OAAO,CAACK,UAA9B;AACAJ,IAAAA,YAAY,CAACF,MAAb,GAAsB,IAAtB;AACAE,IAAAA,YAAY,CAACK,GAAb,GACE,OAAON,OAAO,CAACO,cAAf,KAAkC,SAAlC,GAA8C,CAACP,OAAO,CAACO,cAAvD,GAAwE,KAD1E;AAEAN,IAAAA,YAAY,CAACO,MAAb,GAAsB,OAAOR,OAAO,CAACQ,MAAf,KAA0B,SAA1B,GAAsCR,OAAO,CAACQ,MAA9C,GAAuD,KAA7E;AAEA,UAAMX,UAAN,EAAkBC,MAAlB,EAA0BG,YAAY,CAACQ,IAAvC,EAA6CV,MAA7C,EAAqDE,YAArD;AACD;;AAX4D;;AAc/DS,MAAM,CAACC,OAAP,GAAiBhB,yBAAjB","sourcesContent":["'use strict';\n\nconst FindAndModifyOperation = require('./find_and_modify');\n\nclass FindOneAndUpdateOperation extends FindAndModifyOperation {\n  constructor(collection, filter, update, options) {\n    // Final options\n    const finalOptions = Object.assign({}, options);\n    finalOptions.fields = options.projection;\n    finalOptions.update = true;\n    finalOptions.new =\n      typeof options.returnOriginal === 'boolean' ? !options.returnOriginal : false;\n    finalOptions.upsert = typeof options.upsert === 'boolean' ? options.upsert : false;\n\n    super(collection, filter, finalOptions.sort, update, finalOptions);\n  }\n}\n\nmodule.exports = FindOneAndUpdateOperation;\n"]},"metadata":{},"sourceType":"script"}